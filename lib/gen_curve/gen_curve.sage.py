

# This file was *autogenerated* from the file gen_curve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_4 = Integer(4); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1000 = Integer(1000); _sage_const_5 = Integer(5); _sage_const_100 = Integer(100); _sage_const_1010000001983298392831832983928328938293829328932 = Integer(1010000001983298392831832983928328938293829328932); _sage_const_3014688773870022715669219 = Integer(3014688773870022715669219); _sage_const_97 = Integer(97)
def FullRepresentInteger(M, p, trials=_sage_const_0 , s=_sage_const_0 ):
	m_=floor(float(sqrt(_sage_const_4 *M/p)))
	z_=randrange(-m_, m_)
	s+=_sage_const_1 
	seed(s)

	m__=floor(float( sqrt(_sage_const_4 *M/p-z_**_sage_const_2 ) ))
	t_=randrange(-m__, m__)
	s+=_sage_const_1 
	seed(s)

	M_=_sage_const_4 *M-p*((z_)**_sage_const_2 +(t_)**_sage_const_2 )

	#Test if M_=1 mod 4
	is_sum=((M_&_sage_const_3 )==_sage_const_1 )
	if not is_sum:
		if trials>_sage_const_1000 :
			return
		return FullRepresentInteger(M,p,trials+_sage_const_1 , s)

	x_,y_=two_squares(M_)

	if (x_-t_)&_sage_const_1 !=_sage_const_0  or (z_-y_)&_sage_const_1 !=_sage_const_0 :
		if trials>_sage_const_1000 :
			return
		return FullRepresentInteger(M,p,trials+_sage_const_1 , s)
	return (x_, y_, z_, t_)



L1=prod([p for p in range(_sage_const_5 , _sage_const_100 ) if p&_sage_const_3 ==_sage_const_1  and p in Primes()])**_sage_const_2 
L2=_sage_const_5 
L=L1*L2

p=_sage_const_1010000001983298392831832983928328938293829328932 
f=_sage_const_3014688773870022715669219 

h=floor(float(log(p/f)/log(_sage_const_97 )))+_sage_const_1 

M=(_sage_const_97 **h)*f

print(float(sqrt(_sage_const_4 *M/p)))

m_=floor(float(sqrt(_sage_const_4 *M/p)))
z_=ZZ.random_element(-m_,m_)

m__=floor(float( sqrt(_sage_const_4 *M/p-z_**_sage_const_2 ) ))
t_=ZZ.random_element(-m__,m__)

M_=_sage_const_4 *M-p*((z_)**_sage_const_2 +(t_)**_sage_const_2 )

print(M_, z_, t_, m_, m__)

is_sum=(((M_)&_sage_const_3 ))
print(is_sum)




# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3)
from argparse import ArgumentParser

parser=ArgumentParser()

parser.add_argument("-n", "--regularity", default="3")
parser.add_argument("-d", "--depth", default="10")
parser.add_argument("-i", "--iterations", default="100")



args=parser.parse_args()

def graphs_n_reg_depth_h(n,h, base_n_int, step=_sage_const_0 , iterations=_sage_const_0 ):
	def do_stuff():
		print(base_n_int)
	
	i=_sage_const_0 
	while i<iterations:
		print(step)
		while step < h-_sage_const_1 :
			step+=_sage_const_1 
	
		do_stuff()
		while base_n_int[step]<n-_sage_const_1 :
			base_n_int[step]+=_sage_const_1 
			do_stuff()

		while base_n_int[step]==n-_sage_const_1 :
			base_n_int[step]=_sage_const_0 
			step-=_sage_const_1 
			if base_n_int[step]==n-_sage_const_1 :
				continue
		base_n_int[step]+=_sage_const_1 
		do_stuff()
		i+=_sage_const_3 


graphs_n_reg_depth_h(Integer(args.regularity),			Integer(args.depth),			[_sage_const_0 ]*Integer(args.depth),			iterations=Integer(args.iterations))



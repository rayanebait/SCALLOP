

# This file was *autogenerated* from the file t.sage
from sage.all_cmdline import *   # import sage library

_sage_const_11111111111111111111111111111111111111111111111111111111111111111111 = Integer(11111111111111111111111111111111111111111111111111111111111111111111); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_0p100 = RealNumber('0.100'); _sage_const_1 = Integer(1); _sage_const_0p2 = RealNumber('0.2')
from multiprocessing import Process, TimeoutError, Pipe
from multiprocessing.connection import wait
#from queue import Queue, SimpleQueue, Empty

import time

def f(cqr, fcs):
	while True:
		print("Waiting")
		i=cqr.recv()

		print("Factoring")
		factors=ecm.factor(_sage_const_11111111111111111111111111111111111111111111111111111111111111111111 +_sage_const_2 *i, None)

		fqs.send(factors)


processes=[]


cqr, cqs=Pipe(duplex=False)
fqr, fqs=Pipe(duplex=False)

p=Process(target=f, args=(cqr,fqs))

p.start()

i=_sage_const_0 
while True:
	time.sleep(float(_sage_const_0p100 ))
	cqs.send(i)

	i+=_sage_const_1 
	try:
		time.sleep(float(_sage_const_0p2 ))
		if fqr.poll():
			factors=fqr.recv()
		else:
			p.terminate()
			print("process terminated\n")
			cqr, cqs=Pipe(duplex=False)
			fqr, fqs=Pipe(duplex=False)

			p=Process(target=f, args=(cqr,fqs))
			p.start()
			continue

	except TimeoutError:
		p.terminate()
		print("process terminated\n")
		cqr, cqs=Pipe(duplex=False)
		fqr, fqs=Pipe(duplex=False)

		p=Process(target=f, args=(cqr,fqs))
		p.start()
		continue
	print("has factored",factors)

	



#time.sleep(1)
print("DONE")

